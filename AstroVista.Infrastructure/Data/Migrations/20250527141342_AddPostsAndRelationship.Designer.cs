// <auto-generated />
using System;
using AstroVista.Infrastructure.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AstroVista.Infrastructure.Migrations
{
    [DbContext(typeof(AstroVistaDbContext))]
    [Migration("20250527141342_AddPostsAndRelationship")]
    partial class AddPostsAndRelationship
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AstroVista.Core.Entities.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            Content = "This is my first post on AstroVista! Excited to share my astronomical observations.",
                            DateCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DateUpdated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Title = "Welcome to AstroVista",
                            UserId = new Guid("12345678-1234-1234-1234-123456789abc")
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            Content = "Last night I observed Saturn through my telescope. The rings were incredibly clear!",
                            DateCreated = new DateTime(2025, 1, 2, 0, 0, 0, 0, DateTimeKind.Utc),
                            DateUpdated = new DateTime(2025, 1, 2, 0, 0, 0, 0, DateTimeKind.Utc),
                            Title = "Amazing Saturn Observation",
                            UserId = new Guid("12345678-1234-1234-1234-123456789abc")
                        },
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-333333333333"),
                            Content = "The Perseid meteor shower was spectacular this year. Counted over 50 meteors per hour!",
                            DateCreated = new DateTime(2025, 1, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            DateUpdated = new DateTime(2025, 1, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Title = "Meteor Shower Report",
                            UserId = new Guid("12345678-1234-1234-1234-123456789abc")
                        });
                });

            modelBuilder.Entity("AstroVista.Core.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("12345678-1234-1234-1234-123456789abc"),
                            DateCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DateUpdated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "admin@astrovista.com",
                            FirstName = "Vincent",
                            LastName = "Van Herreweghe",
                            Username = "SkreamO"
                        });
                });

            modelBuilder.Entity("AstroVista.Core.Entities.Post", b =>
                {
                    b.HasOne("AstroVista.Core.Entities.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("AstroVista.Core.Entities.User", b =>
                {
                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
